name: 'Terraform Build'

#Build can only be ran manually or on PR to main
on:
  push:
    branches:
    - main
  pull_request:
    types: [closed]
  workflow_dispatch:

jobs:
  azure-terraform-job:
    name: 'Terraform Build'
    runs-on: ghcr.io/libre-devops/azure-terraform-gh-action:latest
    environment: tst
    env:
      PIPELINE_PLAN: "pipeline.plan"
      TERRAFORM_PATH: "terraform"
      SHORTHAND_PROJECT_NAME: "lbdo"
      SHORTHAND_ENVIRONMENT: "tst"
      SHORTHAND_LOCATION: "euw"
      TERRAFORM_COMPLIANCE_POLICY: "https://github.com/libre-devops/azure-naming-convention.git//?ref=main"
      TERRAFORM_STATE_NAME: "tst-build"


    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
      - uses: actions/checkout@v3

      - name: azure-terraform-build
        id: terraform-build
        uses: libre-devops/azure-terraform-gh-actionn@1.0.0
        with:
          terraform-path: "${{ env.GITHUB_WORKSPACE }}/terraform"
          terraform-workspace-name: "dev"
          terraform-backend-storage-rg-name: ${{ secrets.SpokeSaRgName }}
          terraform-backend-storage-account-name: ${{ secrets.SpokeSaName }}
          terraform-backend-blob-container-name: ${{ secrets.SpokeSaBlobContainerName }}
          terraform-backend-storage-access-key: ${{ secrets.SpokeSaPrimaryKey }}
          terraform-backend-state-name: "lbdo-dev-gh.terraform.tfstate"
          terraform-provider-client-id: ${{ secrets.SpokeSvpClientId }}
          terraform-provider-client-secret: ${{ secrets.SpokeSvpClientSecret }}
          terraform-provider-subscription-id: ${{ secrets.SpokeSubId }}
          terraform-provider-tenant-id: ${{ secrets.SpokeTenantId }}
          terraform-compliance-path: "https://github.com/craigthackerx/azure-terraform-compliance-naming-convention.git//?ref=main"
          checkov-skipped-tests: "CKV_AZURE_2"
          run-terraform-destroy: "false"
